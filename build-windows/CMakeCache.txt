# This is the CMakeCache file.
# For build in directory: d:/Unreal Projects/aws-sdk-cpp/build-windows
# It was generated by CMake: C:/Program Files/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Allow tests to be compiled via cross compile, for use with qemu
ALLOW_CROSS_COMPILED_TESTS:BOOL=OFF

//When building for Android, should curl be built as well
ANDROID_BUILD_CURL:BOOL=ON

//When building for Android, should Openssl be built as well
ANDROID_BUILD_OPENSSL:BOOL=ON

//When building for Android, should Zlib be built as well
ANDROID_BUILD_ZLIB:BOOL=ON

//Enable ASSERT_SYNCED_DATA_LOCK_HELD for checking thread issue
ASSERT_LOCK_HELD:BOOL=OFF

//Flag to enable/disable automatically run unit tests after building
AUTORUN_UNIT_TESTS:BOOL=ON

//Value Computed by CMake
AWSSDK_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows

//Value Computed by CMake
AWSSDK_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
AWSSDK_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp

//Path to append into LD_LIBRARY_PATH for unit tests autorun by
// cmake. Set this if custom runtime libs are required for overridden
// dependencies.
AWS_AUTORUN_LD_LIBRARY_PATH:STRING=

//Enables LTO on libraries. Ensure this is set on all consumed
// targets, or linking will fail
AWS_ENABLE_LTO:BOOL=OFF

//Whether to include the s3 endpoint resolver and related config
// files
AWS_ENABLE_S3_ENDPOINT_RESOLVER:BOOL=OFF

//Enable tracing macros
AWS_ENABLE_TRACING:BOOL=OFF

//Set the version reported by Aws::Iot::MqttClientConnectionConfigBuilder
AWS_IOT_SDK_VERSION:BOOL=OFF

//Number of CPU cores of the target machine. Useful when cross-compiling.
AWS_NUM_CPU_CORES:BOOL=OFF

//Compiler warning is treated as an error. Try turning this off
// when observing errors on a new or uncommon compiler
AWS_SDK_WARNINGS_ARE_ERRORS:BOOL=ON

//Windows-only. Turn ON to use the statically-linked MSVC runtime
// lib, instead of the DLL
AWS_STATIC_MSVC_RUNTIME_LIBRARY:BOOL=OFF

//Restricts WINAPI calls to Win7 and older (This will have implications
// in downstream libraries that use TLS especially)
AWS_SUPPORT_WIN7:BOOL=OFF

//Region to target integration tests against
AWS_TEST_REGION:STRING=US_EAST_1

//User agent extension
AWS_USER_AGENT_CUSTOMIZATION:STRING=

//Force c-cal to use shared libs in Findcrypto
AWS_USE_CRYPTO_SHARED_LIBS:BOOL=OFF

//Compiler warning is treated as an error. Try turning this off
// when observing errors on a new or uncommon compiler
AWS_WARNINGS_ARE_ERRORS:BOOL=OFF

//Enables building the benchmark executable
BUILD_BENCHMARKS:BOOL=OFF

//Builds aws common runtime dependencies as part of build. Turn
// off if you want to control your dependency chain.
BUILD_DEPS:BOOL=ON

//Whether or not to build the aws-c-common-huffman-generator tool
BUILD_HUFFMAN_GENERATOR:BOOL=OFF

//A semi-colon delimited list of the projects to build
BUILD_ONLY:STRING=cognito-idp

//Enables building the open telemetry implementation of tracing
BUILD_OPTEL:BOOL=OFF

//Enables building the benchmark tests with open telemetry OTLP
// clients
BUILD_OPTEL_OTLP_BENCHMARKS:BOOL=OFF

//Build Relocatable Binaries, this will turn off features that
// will fail on older kernels than used for the build.
BUILD_RELOCATABLE_BINARIES:BOOL=OFF

//If enabled, all aws sdk libraries will be build as shared objects;
// otherwise all Aws libraries will be built as static objects
BUILD_SHARED_LIBS:BOOL=ON

//Build the testing tree.
BUILD_TESTING:BOOL=OFF

//Set this if you want to provide your own cryptography implementation.
// This will cause the defaults to not be compiled.
BYO_CRYPTO:BOOL=OFF

//Bypass the machine's default proxy settings when using IXmlHttpRequest2
BYPASS_DEFAULT_PROXY:BOOL=ON

//Path to a program.
CMAKE_AR:FILEPATH=D:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/lib.exe

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:UNINITIALIZED=Release

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during DEBUGOPT builds.
CMAKE_C_FLAGS_DEBUGOPT:STRING=

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during DEBUGOPT builds.
CMAKE_EXE_LINKER_FLAGS_DEBUGOPT:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/CMakeFiles/pkgRedirects

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=D:/Unreal Projects/AICharacterTest/ThirdParty/AWSSDK

//Path to a program.
CMAKE_LINKER:FILEPATH=D:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// DEBUGOPT builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUGOPT:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=AWSSDK

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=1.11.274

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=11

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=274

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during DEBUGOPT builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUGOPT:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUGOPT builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUGOPT:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Flag to upgrade the C++ standard used. The default is 11. The
// minimum is 11.
CPP_STANDARD:STRING=11

//If set to ON, generates the sdk project files with custom memory
// management enabled, otherwise disables it
CUSTOM_MEMORY_MANAGEMENT:BOOL=OFF

//Disables IMDSv1 internal client calls
DISABLE_INTERNAL_IMDSV1_CALLS:BOOL=OFF

//Flags to enable/disable Address Sanitizer for gcc or clang
ENABLE_ADDRESS_SANITIZER:BOOL=OFF

//If enabled, Curl's internal log will be piped to SDK's logger
ENABLE_CURL_LOGGING:BOOL=ON

//If enabled, corresponding http client test suites will be built
// and run
ENABLE_HTTP_CLIENT_TESTING:BOOL=OFF

//Whether to run the integration tests that rely on pre-configured
// localhost
ENABLE_LOCALHOST_INTEGRATION_TESTS:BOOL=OFF

//Whether to run the integration tests that rely on pre-configured
// mock server
ENABLE_MOCK_SERVER_TESTS:BOOL=OFF

//Whether to run the integration tests that rely on pre-configured
// multi-region access point
ENABLE_MRAP_TESTS:BOOL=OFF

//Whether to run the proxy integration tests that rely on pre-configured
// proxy
ENABLE_PROXY_INTEGRATION_TESTS:BOOL=OFF

//Flag to enable/disable rtti within the library
ENABLE_RTTI:BOOL=ON

//Enable sanitizers in debug builds
ENABLE_SANITIZERS:BOOL=OFF

//Flag to enable/disable building unit and integration tests
ENABLE_TESTING:BOOL=ON

//If enabled, the SDK will be built using a single unified .cpp
// file for each service library.  Reduces the size of static library
// binaries on Windows and Linux
ENABLE_UNITY_BUILD:BOOL=ON

//This option usually works with REGENERATE_CLIENTS.          
//                       If enabled when doing code generation,
// operation related functions in service clients will be marked
// as virtual.                                 If disabled when
// doing code generation, virtual will not be added to operation
// functions and service client class will be marked as final.
//                                 If disabled, SDK will add compiler
// flags '-ffunction-sections -fdata-sections' for gcc and clang
// when compiling.                                 You can utilize
// this feature to work with your linker to reduce binary size
// of your application on Unix platforms when doing static linking
// in Release mode.
ENABLE_VIRTUAL_OPERATIONS:BOOL=ON

//For services that support it, request content will be compressed.
// On by default if dependency available
ENABLE_ZLIB_REQUEST_COMPRESSION:BOOL=OFF

//Forces usage of the Curl client rather than the default OS-specific
// api
FORCE_CURL:BOOL=OFF

//If enabled, will unconditionally link the standard libraries
// in dynamically, otherwise the standard library will be linked
// in based on the BUILD_SHARED_LIBS setting
FORCE_SHARED_CRT:BOOL=ON

//Git command line client
GIT_EXECUTABLE:FILEPATH=C:/Program Files/Git/cmd/git.exe

//If the CRT libs are being built from your source tree (add_subdirectory),
// set this to ON
IN_SOURCE_BUILD:BOOL=OFF

//If enabled, the SDK will use 1.11.0 version of CMake files to
// build
LEGACY_BUILD:BOOL=ON

//This enables builds with compiler versions such as gcc 4.1.2.
// This is not a 'supported' feature; it's just a best effort.
LEGACY_COMPILER_SUPPORT:BOOL=OFF

//If enabled, the SDK will be built via a unity aggregation process
// that results in smaller static libraries; additionally, release
// binaries will favor size optimizations over speed
MINIMIZE_SIZE:BOOL=OFF

//If enabled, no platform-default encryption will be included in
// the library.  For the library to be used you will need to provide
// your own platform-specific implementations
NO_ENCRYPTION:BOOL=OFF

//If enabled, no platform-default http client will be included
// in the library.  For the library to be used you will need to
// provide your own platform-specific implementation
NO_HTTP_CLIENT:BOOL=OFF

//Performs compile-time checks that each header can be included
// independently. Requires a C++ compiler.
PERFORM_HEADER_CHECK:BOOL=OFF

//Path to a program.
PYTHON_EXECUTABLE:FILEPATH=C:/Users/samma/AppData/Local/Programs/Python/Python311/python.exe

//If set to ON, all clients being built on this run will be regenerated
// from the api definitions, this option involves some setup of
// python, java 8+, and maven
REGENERATE_CLIENTS:BOOL=OFF

//If set to ON, defaults mode configuration will be regenerated
// from the JSON definitions, this option involves some setup of
// python, java 8+, and maven
REGENERATE_DEFAULTS:BOOL=OFF

//List of sanitizers to build with
SANITIZERS:STRING=address;undefined

//If enabled, removes all the additional indirection (platform/cpu/config)
// in the bin and lib directories on the install step
SIMPLE_INSTALL:BOOL=ON

//Deprecated. Use AWS_STATIC_MSVC_RUNTIME_LIBRARY instead
STATIC_CRT:BOOL=OFF

//Whenever possible, use functions optimized for CPUs with specific
// extensions (ex: SSE, AVX).
USE_CPU_EXTENSIONS:BOOL=ON

//If enabled, the common runtime HTTP client will be used, and
// the legacy systems such as WinHttp and libcurl will not be built
// or included
USE_CRT_HTTP_CLIENT:BOOL=OFF

//Use I/O Completion Ports to drive event-loops.             If
// disabled, a less performant implementation based on select()
// is used.             Disable this if implementing your own event-loop
// whose interface does not match the IOCP interface.
USE_IO_COMPLETION_PORTS:BOOL=ON

//If enabled on windows, the com object IXmlHttpRequest2 will be
// used for the http stack
USE_IXML_HTTP_REQUEST_2:BOOL=OFF

//Set this if you want to use your system's OpenSSL 1.0.2/1.1.1
// compatible libcrypto
USE_OPENSSL:BOOL=ON

//Set http client to enforce TLS 1.2
USE_TLS_V1_2:BOOL=ON

//Set http client to enforce TLS 1.3
USE_TLS_V1_3:BOOL=OFF

//The name of the kernel library to link against (default: Kernel32)
WINDOWS_KERNEL_LIB:STRING=Kernel32

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=ZLIB_INCLUDE_DIR-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=ZLIB_LIBRARY_RELEASE-NOTFOUND

//Value Computed by CMake
aws-c-auth_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-auth

//Value Computed by CMake
aws-c-auth_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-auth_LIB_DEPENDS:STATIC=general;aws-c-sdkutils;general;aws-c-cal;general;aws-c-http;

//Value Computed by CMake
aws-c-auth_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-auth

//Value Computed by CMake
aws-c-cal_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-cal

//Value Computed by CMake
aws-c-cal_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-cal_LIB_DEPENDS:STATIC=general;aws-c-common;general;ncrypt;

//Value Computed by CMake
aws-c-cal_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-cal

//Value Computed by CMake
aws-c-common_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-common

//Value Computed by CMake
aws-c-common_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-common_LIB_DEPENDS:STATIC=general;BCrypt;general;Kernel32;general;Ws2_32;general;Shlwapi;general;Psapi;

//Value Computed by CMake
aws-c-common_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-common

//Value Computed by CMake
aws-c-compression_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-compression

//Value Computed by CMake
aws-c-compression_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-compression_LIB_DEPENDS:STATIC=general;aws-c-common;

//Value Computed by CMake
aws-c-compression_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-compression

//Value Computed by CMake
aws-c-event-stream_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-event-stream

//Value Computed by CMake
aws-c-event-stream_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-event-stream_LIB_DEPENDS:STATIC=general;aws-c-io;general;aws-c-common;general;aws-checksums;

//Value Computed by CMake
aws-c-event-stream_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-event-stream

//Value Computed by CMake
aws-c-http_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-http

//Value Computed by CMake
aws-c-http_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-http_LIB_DEPENDS:STATIC=general;aws-c-io;general;aws-c-compression;

//Value Computed by CMake
aws-c-http_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-http

//Value Computed by CMake
aws-c-io_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-io

//Value Computed by CMake
aws-c-io_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-io_LIB_DEPENDS:STATIC=general;aws-c-common;general;aws-c-cal;general;Secur32;general;Crypt32;

//Value Computed by CMake
aws-c-io_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-io

//Value Computed by CMake
aws-c-mqtt_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-mqtt

//Value Computed by CMake
aws-c-mqtt_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-mqtt_LIB_DEPENDS:STATIC=general;aws-c-http;

//Value Computed by CMake
aws-c-mqtt_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-mqtt

//Value Computed by CMake
aws-c-s3_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-s3

//Value Computed by CMake
aws-c-s3_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-s3_LIB_DEPENDS:STATIC=general;aws-c-auth;general;aws-checksums;

//Value Computed by CMake
aws-c-s3_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-s3

//Value Computed by CMake
aws-c-sdkutils_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-c-sdkutils

//Value Computed by CMake
aws-c-sdkutils_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-c-sdkutils_LIB_DEPENDS:STATIC=general;aws-c-common;

//Value Computed by CMake
aws-c-sdkutils_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-c-sdkutils

//Value Computed by CMake
aws-checksums_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp/crt/aws-checksums

//Value Computed by CMake
aws-checksums_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-checksums_LIB_DEPENDS:STATIC=general;aws-c-common;

//Value Computed by CMake
aws-checksums_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp/crt/aws-checksums

//Value Computed by CMake
aws-cpp-sdk-all_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows

//Value Computed by CMake
aws-cpp-sdk-all_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
aws-cpp-sdk-all_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp

//Value Computed by CMake
aws-cpp-sdk-cognito-idp_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/generated/src/aws-cpp-sdk-cognito-idp

//Value Computed by CMake
aws-cpp-sdk-cognito-idp_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
aws-cpp-sdk-cognito-idp_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/generated/src/aws-cpp-sdk-cognito-idp

//Value Computed by CMake
aws-cpp-sdk-core-tests_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/tests/aws-cpp-sdk-core-tests

//Value Computed by CMake
aws-cpp-sdk-core-tests_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
aws-cpp-sdk-core-tests_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/tests/aws-cpp-sdk-core-tests

//Value Computed by CMake
aws-cpp-sdk-core_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/src/aws-cpp-sdk-core

//Value Computed by CMake
aws-cpp-sdk-core_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
aws-cpp-sdk-core_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/src/aws-cpp-sdk-core

//Value Computed by CMake
aws-crt-cpp_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/crt/aws-crt-cpp

//Value Computed by CMake
aws-crt-cpp_IS_TOP_LEVEL:STATIC=OFF

//Dependencies for the target
aws-crt-cpp_LIB_DEPENDS:STATIC=general;aws-c-http;general;aws-c-mqtt;general;aws-c-cal;general;aws-c-auth;general;aws-c-common;general;aws-c-io;general;aws-checksums;general;aws-c-event-stream;general;aws-c-s3;

//Value Computed by CMake
aws-crt-cpp_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/crt/aws-crt-cpp

//Value Computed by CMake
cognito-idp-gen-tests_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/generated/tests/cognito-idp-gen-tests

//Value Computed by CMake
cognito-idp-gen-tests_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
cognito-idp-gen-tests_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/generated/tests/cognito-idp-gen-tests

//Value Computed by CMake
testing-resources_BINARY_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/build-windows/tests/testing-resources

//Value Computed by CMake
testing-resources_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
testing-resources_SOURCE_DIR:STATIC=D:/Unreal Projects/aws-sdk-cpp/tests/testing-resources


########################
# INTERNAL cache entries
########################

//Test AWS_ARCH_ARM32
AWS_ARCH_ARM32:INTERNAL=
//Test AWS_ARCH_ARM64
AWS_ARCH_ARM64:INTERNAL=
//Test AWS_ARCH_INTEL
AWS_ARCH_INTEL:INTERNAL=1
//Test AWS_HAVE_AUXV
AWS_HAVE_AUXV:INTERNAL=
//Test AWS_HAVE_EXECINFO
AWS_HAVE_EXECINFO:INTERNAL=
//Test AWS_HAVE_GCC_INLINE_ASM
AWS_HAVE_GCC_INLINE_ASM:INTERNAL=
//Test AWS_HAVE_GCC_OVERFLOW_MATH_EXTENSIONS
AWS_HAVE_GCC_OVERFLOW_MATH_EXTENSIONS:INTERNAL=
//Result of TRY_COMPILE
AWS_HAVE_GCC_OVERFLOW_MATH_EXTENSIONS_COMPILED:INTERNAL=FALSE
//Test AWS_HAVE_LINUX_IF_LINK_H
AWS_HAVE_LINUX_IF_LINK_H:INTERNAL=
//Test AWS_HAVE_MSVC_INTRINSICS_X64
AWS_HAVE_MSVC_INTRINSICS_X64:INTERNAL=1
//Test AWS_HAVE_WINAPI_DESKTOP
AWS_HAVE_WINAPI_DESKTOP:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=d:/Unreal Projects/aws-sdk-cpp/build-windows
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=29
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUGOPT
CMAKE_C_FLAGS_DEBUGOPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUGOPT
CMAKE_EXE_LINKER_FLAGS_DEBUGOPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 17 2022
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=D:/Program Files/Microsoft Visual Studio/2022/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=D:/Unreal Projects/aws-sdk-cpp
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUGOPT
CMAKE_MODULE_LINKER_FLAGS_DEBUGOPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=18
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files/CMake/share/cmake-3.29
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUGOPT
CMAKE_SHARED_LINKER_FLAGS_DEBUGOPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUGOPT
CMAKE_STATIC_LINKER_FLAGS_DEBUGOPT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Users/samma/AppData/Local/Programs/Python/Python311/python.exe][v3.11.6()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Have symbol pathconf
HAS_PATHCONF:INTERNAL=
//Have include stdbool.h
HAS_STDBOOL:INTERNAL=1
//Have include stdint.h
HAS_STDINT:INTERNAL=1
//Have symbol umask
HAS_UMASK:INTERNAL=
//Test HAS_WGNU
HAS_WGNU:INTERNAL=
//Test HAVE_AVX2_INTRINSICS
HAVE_AVX2_INTRINSICS:INTERNAL=1
//Test HAVE_MM256_EXTRACT_EPI64
HAVE_MM256_EXTRACT_EPI64:INTERNAL=1
//Test HAVE_M_AVX2_FLAG
HAVE_M_AVX2_FLAG:INTERNAL=1
//Test HAVE_SYSCONF
HAVE_SYSCONF:INTERNAL=
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Test WINHTTP_HAS_H2
WINHTTP_HAS_H2:INTERNAL=1
//Result of TRY_COMPILE
WINHTTP_HAS_H2_COMPILED:INTERNAL=TRUE
//Result of try_run()
WINHTTP_HAS_H2_EXITCODE:INTERNAL=0
//Test WININET_HAS_H2
WININET_HAS_H2:INTERNAL=1
//Result of TRY_COMPILE
WININET_HAS_H2_COMPILED:INTERNAL=TRUE
//Result of try_run()
WININET_HAS_H2_EXITCODE:INTERNAL=0
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1

